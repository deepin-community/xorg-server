From db9554f0475ee8bfee584dbeb06e83caba3c3809 Mon Sep 17 00:00:00 2001
From: diguoliang <diguoliang@uniontech.com>
Date: Wed, 29 Dec 2021 17:26:46 +0800
Subject: [PATCH] fix the problem that Huawei Cloud graphics card udev busid fails to obtain

Change-Id: Id5e5ecc50c2ce7a550c2b725dab69bf6351bbf3f
---
 config/udev.c                              | 18 ++++++++++------
 hw/xfree86/os-support/linux/lnx_platform.c | 25 ++++++++++++++++++++++
 2 files changed, 37 insertions(+), 6 deletions(-)

diff --git a/config/udev.c b/config/udev.c
index 5ca1a2ad5..1a3ce8992 100644
--- a/config/udev.c
+++ b/config/udev.c
@@ -45,6 +45,8 @@
 
 #define UDEV_XKB_PROP_KEY "xkb"
 
+Bool g_useUDevGetBusId = TRUE;
+
 #define LOG_PROPERTY(path, prop, val)                                   \
     LogMessageVerb(X_INFO, 10,                                          \
                    "config/udev: getting property %s on %s "            \
@@ -544,14 +546,18 @@
     attribs->minor = minor;
 
     value = udev_device_get_property_value(udev_device, "ID_PATH");
-    if (value && (str = strrstr(value, "pci-"))) {
-        value = str;
-
-        if ((str = strstr(value, "usb-")))
+    if (value) {
+        if (str = strrstr(value, "pci-")) {
             value = str;
 
-        attribs->busid = XNFstrdup(value);
-        attribs->busid[3] = ':';
+            if ((str = strstr(value, "usb-")))
+		value = str;
+
+	    attribs->busid = XNFstrdup(value);
+	    attribs->busid[3] = ':';
+	} else {
+	    g_useUDevGetBusId = FALSE;
+	}
     }
 
     if (!value)
diff --git a/hw/xfree86/os-support/linux/lnx_platform.c b/hw/xfree86/os-support/linux/lnx_platform.c
--- a/hw/xfree86/os-support/linux/lnx_platform.c
+++ b/hw/xfree86/os-support/linux/lnx_platform.c
@@ -20,6 +20,8 @@
 #include "hotplug.h"
 #include "systemd-logind.h"
 
+extern Bool g_useUDevGetBusId;
+
 static Bool
 get_drm_info(struct OdevAttributes *attribs, char *path, int delayed_index)
 {
@@ -57,6 +59,29 @@
     if (server_fd)
         xf86_platform_devices[delayed_index].flags |= XF86_PDEV_SERVER_FD;
 
+    if (!g_useUDevGetBusId) {
+	drmSetVersion sv;
+	char *buf;
+
+	sv.drm_di_major = 1;
+	sv.drm_di_minor = 4;
+	sv.drm_dd_major = -1;       /* Don't care */
+	sv.drm_dd_minor = -1;       /* Don't care */
+
+	err = drmSetInterfaceVersion(fd, &sv);
+	if (err) {
+	    xf86Msg(X_ERROR, "%s: failed to set DRM interface version 1.4: %s\n",
+		    path, strerror(-err));
+	    goto out;
+	}
+
+	buf = drmGetBusid(fd);
+	xf86_platform_odev_attributes(delayed_index)->busid = XNFstrdup(buf);
+	drmFreeBusid(buf);
+
+	g_useUDevGetBusId = TRUE;
+    }
+
     v = drmGetVersion(fd);
     if (!v) {
         xf86Msg(X_ERROR, "%s: failed to query DRM version\n", path);
-- 
2.20.1
